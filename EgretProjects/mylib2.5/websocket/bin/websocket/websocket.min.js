var ClientSocket=function(){function t(){this.isConnecting=!1,this.dataLenMin=4}var e=(__define,t);return p=e.prototype,t.getInstance=function(){return null==this.instance&&(this.instance=new t),this.instance},p.connect=function(){console.log("start connect socket..."),null==this.webSocket&&(this.webSocket=new egret.WebSocket,this.webSocket.type=egret.WebSocket.TYPE_BINARY,this.webSocket.addEventListener(egret.ProgressEvent.SOCKET_DATA,this.onSocketData,this),this.webSocket.addEventListener(egret.Event.CONNECT,this.onSocketConnect,this),this.webSocket.addEventListener(egret.IOErrorEvent.IO_ERROR,this.onSocketError,this),this.webSocket.addEventListener(egret.Event.CLOSE,this.onSocketClose,this)),0==this.isConnecting&&(this.isConnecting=!0,this.webSocket.connect(this.IP,this.port),this.startTimer())},p.onSocketConnect=function(){console.log("socket connect success..."),this.isConnecting=!1,this.stopTimer(),this.socketHand.onSocketConnect(),null!=this.dataBuffer&&(this.send(this.dataBuffer),this.dataBuffer=null)},p.onSocketData=function(){var t=new egret.ByteArray;this.webSocket.readBytes(t);var e=t.length;if(e<this.dataLenMin)return void console.log("rev data len < 4");for(var n=0,o=0,i=0;e-n>this.dataLenMin;){if(i=t.readShort(),o=t.readShort(),e-n>o)return void console.log("rev data len is not enough");t.position=n,this.socketHand.onSocketData(i,t),n+=o}},p.onSocketError=function(){console.log("socket connent error..."),this.isConnecting=!1,this.stopTimer(),this.dataBuffer=null,this.socketHand.onSocketError()},p.onSocketClose=function(){console.log("close socket..."),this.isConnecting=!1,this.stopTimer(),this.dataBuffer=null,this.socketHand.onSocketClose()},p.send=function(t){this.webSocket&&this.webSocket.connected?(this.webSocket.writeBytes(t),this.webSocket.flush()):0==this.isConnecting&&(this.dataBuffer=t,this.connect())},p.close=function(){this.webSocket&&(this.dataBuffer=null,this.isConnecting=!1,this.stopTimer(),this.webSocket.close())},p.setSocketHand=function(t){this.socketHand=t},p.startTimer=function(){null==this.timer&&(this.timer=new egret.Timer(1e4)),this.timer.addEventListener(egret.TimerEvent.TIMER_COMPLETE,this.onTimerComplete,this),this.timer.reset(),this.timer.start()},p.stopTimer=function(){null!=this.timer&&this.timer.stop()},p.onTimerComplete=function(){this.close(),this.socketHand.onSocketConnectTimeOver()},t}();egret.registerClass(ClientSocket,"ClientSocket");